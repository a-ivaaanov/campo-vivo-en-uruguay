#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Uruguay Lands
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–æ–≤, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—á–µ—Ç—ã –≤ Telegram

# –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
if [ -f "$SCRIPT_DIR/.env" ]; then
    export $(grep -v '^#' "$SCRIPT_DIR/.env" | xargs)
else
    echo "–û—à–∏–±–∫–∞: –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $SCRIPT_DIR"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if [ -z "$TELEGRAM_BOT_TOKEN" ] || [ -z "$TELEGRAM_CHAT_ID" ]; then
    echo "–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –≤ —Ñ–∞–π–ª–µ .env"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
mkdir -p "$SCRIPT_DIR/logs"
mkdir -p "$SCRIPT_DIR/results"

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
LAST_CHECK_FILE="$SCRIPT_DIR/.last_results_check"
touch "$LAST_CHECK_FILE"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
send_to_telegram() {
    local message="$1"
    local parse_mode="${2:-HTML}"  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    local data_json
    data_json=$(jq -n \
                   --arg chat_id "$TELEGRAM_CHAT_ID" \
                   --arg text "$message" \
                   --arg parse_mode "$parse_mode" \
                   '{"chat_id": $chat_id, "text": $text, "parse_mode": $parse_mode}')
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ API Telegram
    response=$(curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
                -H "Content-Type: application/json" \
                -d "$data_json")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Telegram API
    if echo "$response" | grep -q '"ok":true'; then
        echo "–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram"
    else
        echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:"
        echo "$response"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤
check_status() {
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤..."
    
    # –¢–µ–∫—É—â–∏–µ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
    local timestamp=$(date +"%Y-%m-%d %H:%M:%S")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞
    local message="<b>üìä –°—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–æ–≤ Uruguay Lands</b>\n"
    message+="<i>$timestamp</i>\n\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    message+="<b>üñ•Ô∏è –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
    message+="<code>$(uname -a)</code>\n"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
    local disk_space=$(df -h / | awk 'NR==2 {print $4 " —Å–≤–æ–±–æ–¥–Ω–æ –∏–∑ " $2 " (" $5 " –∑–∞–Ω—è—Ç–æ)"}')
    message+="<b>üíæ –î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:</b> $disk_space\n\n"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–∞—Ä—Å–µ—Ä–æ–≤
    message+="<b>üîÑ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:</b>\n"
    local mercadolibre_count=$(pgrep -f "python.*mercadolibre" | wc -l | tr -d ' ')
    local infocasas_count=$(pgrep -f "python.*infocasas" | wc -l | tr -d ' ')
    
    if [ "$mercadolibre_count" -gt 0 ]; then
        message+="MercadoLibre: $mercadolibre_count –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n"
    else
        message+="MercadoLibre: –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω\n"
    fi
    
    if [ "$infocasas_count" -gt 0 ]; then
        message+="InfoCasas: $infocasas_count –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n"
    else
        message+="InfoCasas: –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω\n"
    fi
    
    message+="\n"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö
    message+="<b>‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏:</b>\n"
    local recent_logs=$(find "$SCRIPT_DIR/logs" -type f -name "*.log" -mtime -1)
    local error_count=0
    
    for log in $recent_logs; do
        local log_errors=$(grep -i "error\|exception\|failed" "$log" | wc -l)
        error_count=$((error_count + log_errors))
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–∞—Ä—Å–µ—Ä–∞ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –ª–æ–≥–∞
        local parser_name=$(basename "$log" | cut -d'_' -f1)
        
        if [ "$log_errors" -gt 0 ]; then
            message+="$parser_name: <b>$log_errors –æ—à–∏–±–æ–∫</b> –≤ $(basename "$log")\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –æ—à–∏–±–∫–∏
            local last_errors=$(grep -i "error\|exception\|failed" "$log" | tail -3)
            if [ -n "$last_errors" ]; then
                message+="<code>$(echo "$last_errors" | sed 's/</\&lt;/g; s/>/\&gt;/g')</code>\n"
            fi
        fi
    done
    
    if [ "$error_count" -eq 0 ]; then
        message+="–û—à–∏–±–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ\n"
    fi
    
    message+="\n"
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø–∞—Ä—Å–µ—Ä–æ–≤
    message+="<b>üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:</b>\n"
    
    # –ü–æ–¥—Å—á–µ—Ç —Ñ–∞–π–ª–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    local mercadolibre_results=$(find "$SCRIPT_DIR/results" -type f -name "mercadolibre*.json" | wc -l | tr -d ' ')
    local infocasas_results=$(find "$SCRIPT_DIR/results" -type f -name "infocasas*.json" | wc -l | tr -d ' ')
    
    message+="MercadoLibre: $mercadolibre_results —Ñ–∞–π–ª–æ–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏\n"
    message+="InfoCasas: $infocasas_results —Ñ–∞–π–ª–æ–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏\n"
    
    # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
    local total_listings=0
    
    for file in $(find "$SCRIPT_DIR/results" -type f -name "*.json" -mtime -7); do
        local file_listings=$(jq '. | length' "$file" 2>/dev/null || echo 0)
        total_listings=$((total_listings + file_listings))
    done
    
    message+="–í—Å–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π: $total_listings\n"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    send_to_telegram "$message"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∞—Ä—Å–µ—Ä–æ–≤
check_results() {
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∞—Ä—Å–µ—Ä–æ–≤..."
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    local last_check_time=$(cat "$LAST_CHECK_FILE" 2>/dev/null || echo 0)
    local current_time=$(date +%s)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    echo "$current_time" > "$LAST_CHECK_FILE"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    local new_files=$(find "$SCRIPT_DIR/results" -type f -name "*.json" -newermt "@$last_check_time")
    
    if [ -z "$new_files" ]; then
        echo "–ù–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        return 0
    fi
    
    # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –Ω–æ–≤—ã–º —Ñ–∞–π–ª–∞–º
    local new_mercadolibre_files=0
    local new_infocasas_files=0
    local new_mercadolibre_listings=0
    local new_infocasas_listings=0
    
    for file in $new_files; do
        if [[ "$file" == *"mercadolibre"* ]]; then
            new_mercadolibre_files=$((new_mercadolibre_files + 1))
            local file_listings=$(jq '. | length' "$file" 2>/dev/null || echo 0)
            new_mercadolibre_listings=$((new_mercadolibre_listings + file_listings))
        elif [[ "$file" == *"infocasas"* ]]; then
            new_infocasas_files=$((new_infocasas_files + 1))
            local file_listings=$(jq '. | length' "$file" 2>/dev/null || echo 0)
            new_infocasas_listings=$((new_infocasas_listings + file_listings))
        fi
    done
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    local message="<b>üÜï –ù–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–µ—Ä–æ–≤</b>\n"
    message+="<i>$(date +"%Y-%m-%d %H:%M:%S")</i>\n\n"
    
    if [ "$new_mercadolibre_files" -gt 0 ]; then
        message+="<b>MercadoLibre:</b> $new_mercadolibre_files –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤, $new_mercadolibre_listings –æ–±—ä—è–≤–ª–µ–Ω–∏–π\n"
    fi
    
    if [ "$new_infocasas_files" -gt 0 ]; then
        message+="<b>InfoCasas:</b> $new_infocasas_files –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤, $new_infocasas_listings –æ–±—ä—è–≤–ª–µ–Ω–∏–π\n"
    fi
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –≤ Telegram
    send_to_telegram "$message"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
cleanup() {
    echo "–ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤ —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π
    local old_logs=$(find "$SCRIPT_DIR/logs" -type f -name "*.log" -mtime +30)
    if [ -n "$old_logs" ]; then
        echo "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥-—Ñ–∞–π–ª–æ–≤:"
        echo "$old_logs" | xargs rm -f
        echo "–£–¥–∞–ª–µ–Ω–æ $(echo "$old_logs" | wc -l | tr -d ' ') –ª–æ–≥-—Ñ–∞–π–ª–æ–≤"
    else
        echo "–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥-—Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
    fi
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å—Ç–∞—Ä—à–µ 90 –¥–Ω–µ–π
    local old_results=$(find "$SCRIPT_DIR/results" -type f -name "*.json" -mtime +90)
    if [ -n "$old_results" ]; then
        echo "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:"
        echo "$old_results" | xargs rm -f
        echo "–£–¥–∞–ª–µ–Ω–æ $(echo "$old_results" | wc -l | tr -d ' ') —Ñ–∞–π–ª–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
    else
        echo "–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Uruguay Lands"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  status        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç"
    echo "  results       –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç"
    echo "  cleanup       –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ –∏ —Ñ–∞–π–ª—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
    echo "  help          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 status     # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–æ–≤"
    echo "  $0 results    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
    echo ""
    echo "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –¥–æ–±–∞–≤—å—Ç–µ —Å–∫—Ä–∏–ø—Ç –≤ crontab:"
    echo "  0 */6 * * * $SCRIPT_DIR/monitor.sh status"
    echo "  0 */3 * * * $SCRIPT_DIR/monitor.sh results"
    echo "  0 0 * * 0 $SCRIPT_DIR/monitor.sh cleanup"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
case "${1:-help}" in
    status)
        check_status
        ;;
    results)
        check_results
        ;;
    cleanup)
        cleanup
        ;;
    help|*)
        show_help
        ;;
esac

exit 0 