#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤ Uruguay Lands –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–æ–≤

# –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
if [ -f "$SCRIPT_DIR/.env" ]; then
    export $(grep -v '^#' "$SCRIPT_DIR/.env" | xargs)
else
    echo "–û—à–∏–±–∫–∞: –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $SCRIPT_DIR"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if [ -z "$TELEGRAM_BOT_TOKEN" ] || [ -z "$TELEGRAM_CHAT_ID" ]; then
    echo "–û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å TELEGRAM_BOT_TOKEN –∏ TELEGRAM_CHAT_ID –≤ —Ñ–∞–π–ª–µ .env"
    exit 1
fi

# –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ª–æ–≥–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
mkdir -p "$SCRIPT_DIR/logs"
mkdir -p "$SCRIPT_DIR/results"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
send_to_telegram() {
    local message="$1"
    
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –¥–ª—è Markdown
    message=$(echo "$message" | sed 's/\_/\\_/g' | sed 's/\*/\\*/g' | sed 's/\[/\\[/g' | sed 's/\]/\\]/g' | sed 's/\`/\\`/g')
    
    curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
        -d chat_id="$TELEGRAM_CHAT_ID" \
        -d text="$message" \
        -d parse_mode="MarkdownV2" > /dev/null
    
    local result=$?
    if [ $result -ne 0 ]; then
        echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: –∫–æ–¥ $result"
        return 1
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–æ–≤
check_status() {
    local status_message="üìä *–°—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–æ–≤ Uruguay Lands*\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
    status_message+="üñ• *–°–∏—Å—Ç–µ–º–∞:*\n"
    status_message+="–•–æ—Å—Ç: $(hostname)\n"
    status_message+="–î–∞—Ç–∞: $(date '+%Y-%m-%d %H:%M:%S')\n"
    status_message+="–ù–∞–≥—Ä—É–∑–∫–∞: $(uptime | awk '{print $10 $11 $12}')\n\n"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–∞—Ä—Å–µ—Ä–æ–≤
    status_message+="üîÑ *–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:*\n"
    
    local mercadolibre_processes=$(pgrep -f "run.sh --parser mercadolibre" | wc -l)
    local infocasas_processes=$(pgrep -f "run.sh --parser infocasas" | wc -l)
    
    status_message+="MercadoLibre: $mercadolibre_processes\n"
    status_message+="InfoCasas: $infocasas_processes\n\n"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
    status_message+="‚ö†Ô∏è *–û—à–∏–±–∫–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:*\n"
    
    local ml_errors=$(find "$SCRIPT_DIR/logs" -name "mercadolibre_*.log" -mtime -1 -exec grep -l "ERROR" {} \; | wc -l)
    local ic_errors=$(find "$SCRIPT_DIR/logs" -name "infocasas_*.log" -mtime -1 -exec grep -l "ERROR" {} \; | wc -l)
    
    status_message+="MercadoLibre: $ml_errors\n"
    status_message+="InfoCasas: $ic_errors\n\n"
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º
    status_message+="üìà *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π:*\n"
    
    local ml_count=$(find "$SCRIPT_DIR/results" -name "mercadolibre_*.json" -mtime -7 | xargs cat 2>/dev/null | grep -o '"id":' | wc -l)
    local ic_count=$(find "$SCRIPT_DIR/results" -name "infocasas_*.json" -mtime -7 | xargs cat 2>/dev/null | grep -o '"id":' | wc -l)
    
    status_message+="MercadoLibre (7 –¥–Ω–µ–π): $ml_count\n"
    status_message+="InfoCasas (7 –¥–Ω–µ–π): $ic_count\n\n"
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –≤ Telegram
    status_message+="üì≤ *–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:*\n"
    
    local sent_count=$(grep -o "–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ" "$SCRIPT_DIR/logs/telegram_sender_*.log" 2>/dev/null | wc -l)
    local failed_count=$(grep -o "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è" "$SCRIPT_DIR/logs/telegram_sender_*.log" 2>/dev/null | wc -l)
    
    status_message+="–£—Å–ø–µ—à–Ω–æ: $sent_count\n"
    status_message+="–û—à–∏–±–∫–∏: $failed_count\n\n"
    
    # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    status_message+="üíæ *–î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:*\n"
    status_message+="$(df -h . | awk 'NR==2 {print "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: " $5 " (" $3 "/" $2 ")"}')\n\n"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    send_to_telegram "$status_message"
    
    echo "–°—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
check_results() {
    # –ò—â–µ–º –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
    local new_ml_files=$(find "$SCRIPT_DIR/results" -name "mercadolibre_*.json" -mmin -60 | wc -l)
    local new_ic_files=$(find "$SCRIPT_DIR/results" -name "infocasas_*.json" -mmin -60 | wc -l)
    
    # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤, –≤—ã—Ö–æ–¥–∏–º
    if [ "$new_ml_files" -eq 0 ] && [ "$new_ic_files" -eq 0 ]; then
        echo "–ù–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
        return 0
    fi
    
    # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
    local ml_new_count=0
    local ic_new_count=0
    
    if [ "$new_ml_files" -gt 0 ]; then
        ml_new_count=$(find "$SCRIPT_DIR/results" -name "mercadolibre_*.json" -mmin -60 | xargs cat 2>/dev/null | grep -o '"id":' | wc -l)
    fi
    
    if [ "$new_ic_files" -gt 0 ]; then
        ic_new_count=$(find "$SCRIPT_DIR/results" -name "infocasas_*.json" -mmin -60 | xargs cat 2>/dev/null | grep -o '"id":' | wc -l)
    fi
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    local results_message="üîç *–ù–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞*\n\n"
    
    if [ "$new_ml_files" -gt 0 ]; then
        results_message+="MercadoLibre: $ml_new_count –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ $new_ml_files —Ñ–∞–π–ª–∞—Ö\n"
    fi
    
    if [ "$new_ic_files" -gt 0 ]; then
        results_message+="InfoCasas: $ic_new_count –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ $new_ic_files —Ñ–∞–π–ª–∞—Ö\n"
    fi
    
    results_message+="\n–í—Ä–µ–º—è: $(date '+%Y-%m-%d %H:%M:%S')"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    send_to_telegram "$results_message"
    
    echo "–û—Ç—á–µ—Ç –æ –Ω–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
cleanup() {
    echo "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    # –£–¥–∞–ª—è–µ–º –ª–æ–≥–∏ —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π
    find "$SCRIPT_DIR/logs" -name "*.log" -mtime +30 -delete
    
    # –£–¥–∞–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å—Ç–∞—Ä—à–µ 90 –¥–Ω–µ–π
    find "$SCRIPT_DIR/results" -name "*.json" -mtime +90 -delete
    
    echo "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤ Uruguay Lands –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–æ–≤"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–∫–æ–º–∞–Ω–¥–∞>"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  status    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–æ–≤ –≤ Telegram"
    echo "  results   –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—á–µ—Ç"
    echo "  cleanup   –û—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
    echo "  help      –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 status"
    echo "  $0 results"
    echo "  $0 cleanup"
}

# –ï—Å–ª–∏ –Ω–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É
if [ $# -eq 0 ]; then
    show_help
    exit 0
fi

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
case "$1" in
    status)
        check_status
        exit $?
        ;;
    results)
        check_results
        exit $?
        ;;
    cleanup)
        cleanup
        exit $?
        ;;
    help)
        show_help
        exit 0
        ;;
    *)
        echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        show_help
        exit 1
        ;;
esac

exit 0 